basePath: /api/v1
definitions:
  model.Book:
    properties:
      author:
        description: 作者
        type: string
      create_at:
        description: 创建时间
        format: date-time
        type: string
      id:
        description: 主键
        type: integer
      price:
        description: 价格
        type: integer
      publish_date:
        description: 出版日期
        format: date-time
        type: string
      title:
        description: 书籍名称
        type: string
      update_at:
        description: 更新时间
        format: date-time
        type: string
    type: object
  model.RequestPayloadBook:
    properties:
      books:
        items:
          $ref: '#/definitions/model.Book'
        type: array
    type: object
  model.TFilter:
    properties:
      column:
        type: string
      value:
        type: string
    type: object
  ret.Result:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  ret.Result1:
    properties:
      code:
        type: integer
      msg:
        type: string
    type: object
host: 10.40.3.9:8080
info:
  contact:
    email: 542791872@qq.com
    name: 龙应华
    url: http://www.swagger.io/support
  description: Book API+SQL 增删改查
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Book API
  version: "1.0"
paths:
  /create/books1:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息直接保存book对象信息的接口
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 插入数据成功提示
          schema:
            $ref: '#/definitions/ret.Result1'
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result1'
      summary: 存储book书籍信息
      tags:
      - 单本书籍存储
  /create/books2:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息直接保存book对象信息的接口
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 插入数据成功提示
          schema:
            $ref: '#/definitions/ret.Result1'
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result1'
      summary: 存储book书籍信息
      tags:
      - 单本书籍存储
  /create/books3:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息直接保存book对象信息的接口
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.RequestPayloadBook'
      produces:
      - application/json
      responses:
        "200":
          description: 插入数据成功提示
          schema:
            $ref: '#/definitions/ret.Result1'
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result1'
      summary: 存储book书籍信息
      tags:
      - 多本书籍存储
  /create/books4:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息直接保存book对象信息的接口
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.RequestPayloadBook'
      produces:
      - application/json
      responses:
        "200":
          description: 插入数据成功提示
          schema:
            $ref: '#/definitions/ret.Result1'
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result1'
      summary: 存储book书籍信息
      tags:
      - 多本书籍存储
  /custom/books1:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息查询book对象信息的接口，通过author查询
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 查询数据成功提示
          schema:
            allOf:
            - $ref: '#/definitions/ret.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Book'
                  type: array
              type: object
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result1'
      summary: 查询book书籍信息
      tags:
      - 书籍查询
  /custom/books2:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息查询book对象信息的接口,通过id查询，返回模型
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 查询数据成功提示
          schema:
            allOf:
            - $ref: '#/definitions/ret.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Book'
                  type: array
              type: object
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result'
      summary: 查询book书籍信息
      tags:
      - 书籍查询
  /custom/books3:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息查询book对象信息的接口,通过id查询返回map
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 查询数据成功提示
          schema:
            allOf:
            - $ref: '#/definitions/ret.Result'
            - properties:
                data:
                  $ref: '#/definitions/model.Book'
              type: object
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result'
      summary: 查询book书籍信息
      tags:
      - 书籍查询
  /custom/books4:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息查询book对象信息的接口,通过字段查询返回数据列表集合
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.TFilter'
      produces:
      - application/json
      responses:
        "200":
          description: 查询数据成功提示
          schema:
            allOf:
            - $ref: '#/definitions/ret.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Book'
                  type: array
              type: object
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result'
      summary: 查询book书籍信息
      tags:
      - 书籍查询
  /custom/books5:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息查询book对象信息的接口,通过书籍字段查询返回数据列表集合
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 查询数据成功提示
          schema:
            allOf:
            - $ref: '#/definitions/ret.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Book'
                  type: array
              type: object
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result'
      summary: 查询book书籍信息
      tags:
      - 书籍查询
  /custom/books6:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息查询book对象信息的接口,通过字段查询返回数据列表集合
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 查询数据成功提示
          schema:
            allOf:
            - $ref: '#/definitions/ret.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Book'
                  type: array
              type: object
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result'
      summary: 查询book书籍信息
      tags:
      - 书籍查询
  /delete/books1:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息删除book对象信息的接口
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 删除数据成功提示
          schema:
            $ref: '#/definitions/ret.Result'
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result'
      summary: 删除book书籍信息
      tags:
      - 书籍删除
  /update/books1:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息直接更新book对象信息的接口，更新单列字段
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 更新数据成功提示
          schema:
            $ref: '#/definitions/ret.Result1'
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result1'
      summary: 更新book书籍信息
      tags:
      - 书籍更新
  /update/books2:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息直接更新book对象信息的接口，更新多列字段，map写法
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 更新数据成功提示
          schema:
            $ref: '#/definitions/ret.Result1'
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result1'
      summary: 更新book书籍信息
      tags:
      - 书籍更新
  /update/books3:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息直接更新book对象信息的接口，更新多列字段，模型写法
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 更新数据成功提示
          schema:
            $ref: '#/definitions/ret.Result1'
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result1'
      summary: 更新book书籍信息
      tags:
      - 书籍更新
  /update/books4:
    post:
      consumes:
      - application/json
      description: 前端传入book书籍相关信息直接更新book对象信息的接口，更新多列，更新选定字段
      parameters:
      - description: book书籍的title，author，price相关信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 更新数据成功提示
          schema:
            $ref: '#/definitions/ret.Result1'
        "400":
          description: 错误提示
          schema:
            $ref: '#/definitions/ret.Result1'
      summary: 更新book书籍信息
      tags:
      - 书籍更新
swagger: "2.0"
